@model WeaponDoc.Models.Program

@{
    ViewBag.Title = "Edit";
}

<div class="content-wrapper">


    <section class="content-header">

        <h1>
            Ввести данные о программе
            <small></small>
        </h1>
    </section>

    <section class="content-wrapper">


        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="box">
                <div class="box-header">
                    <h4>Запись о программе испытаний</h4>
                </div>
                <div class="box-body">
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.ProgramID)

                    <div class="form-group">
                        @Html.LabelFor(model => model.ItemTypeID, "ItemTypeID", htmlAttributes: new { @class = "control-label col-md-2" })

                        @Html.DropDownList("ItemTypeID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ItemTypeID, "", new { @class = "text-danger" })

                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Standard, htmlAttributes: new { @class = "control-label col-md-2" })

                        @Html.EditorFor(model => model.Standard, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Standard, "", new { @class = "text-danger" })

                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ProgramNameFull, htmlAttributes: new { @class = "control-label col-md-2" })

                        @Html.EditorFor(model => model.ProgramNameFull, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ProgramNameFull, "", new { @class = "text-danger" })

                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ProgramNameShort, htmlAttributes: new { @class = "control-label col-md-2" })

                        @Html.EditorFor(model => model.ProgramNameShort, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ProgramNameShort, "", new { @class = "text-danger" })

                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.DurationPerUnit, htmlAttributes: new { @class = "control-label col-md-2" })

                        @Html.EditorFor(model => model.DurationPerUnit, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DurationPerUnit, "", new { @class = "text-danger" })

                    </div>


                    <div class="form-group">

                        <input type="submit" value="Сохранить данные" class="btn btn-default" />

                    </div>
                </div>
                }


                <div>
                    @Html.ActionLink("Back to List", "Index")
                </div>

            </div>
    </section>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
